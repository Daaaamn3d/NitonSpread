import time
import asyncio
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from telegram import Bot

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = "7531307637:AAE66Yu_TOQV6TegAamJ8QWVkX5Q_xFzRHk"
CHAT_ID = 612299504
SPREAD_LIMIT = 2.0  # –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º 0.0 –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
CHECK_INTERVAL = 60

# === –ù–ê–°–¢–†–û–ô–ö–ê CHROMEDRIVER ===
chrome_options = Options()
chrome_options.add_argument("--headless=new")
chrome_options.add_argument("--disable-gpu")
chrome_options.add_argument("--no-sandbox")

service = Service("C:/selenium/driver/chromedriver.exe")  # –£–∫–∞–∂–∏ –∑–¥–µ—Å—å —Å–≤–æ–π –ø—É—Ç—å!
driver = webdriver.Chrome(service=service, options=chrome_options)
bot = Bot(token=BOT_TOKEN)

# === –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò ===
def get_spreads():
    url = "https://uainvest.com.ua/arbitrage?type=spread&exchanges=whitebit_mexc_okx_bybit_bitget_gate_binance"
    driver.get(url)
    time.sleep(5)

    rows = driver.find_elements(By.CSS_SELECTOR, 'table tbody tr')
    result = []

    for row in rows:
        try:
            cells = row.find_elements(By.TAG_NAME, 'td')
            name = cells[0].text.strip()
            spread_text = cells[-1].text.strip().replace('%', '').replace(',', '.')
            spread = float(spread_text)
            if spread >= SPREAD_LIMIT:
                result.append((name, spread))
        except:
            continue

    return result

# === –ê–°–ò–ù–•–†–û–ù–ù–´–ô –¶–ò–ö–õ ===
async def main_loop():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É.")
    while True:
        try:
            found = get_spreads()
            if found:
                message = "üîî –ù–∞–π–¥–µ–Ω—ã —Å–ø—Ä–µ–¥—ã –≤—ã—à–µ 2%:\n\n"
                message += "\n".join([f"{name}: {spread:.2f}%" for name, spread in found])
                await bot.send_message(chat_id=CHAT_ID, text=message)
                print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            else:
                print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)

        await asyncio.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    asyncio.run(main_loop())
